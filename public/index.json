[{"categories":null,"content":"1 准备阶段 ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:1:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"1.1 安装hugo 这里为了省去环境路径的配置采用如下的cmd命令方式，也可以选择去github下载相应文件。如文档：Hugo中文文档 (gohugo.org) winget install Hugo.Hugo.Extended ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:1:1","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"1.2 安装git Git - Downloads (git-scm.com) 选择合适的版本一直下一步即可。 在使用git前需要设置一下用户名和邮箱。 git config --global user.name \"username\" git config --global user.email useremail@qq.com ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:1:2","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"1.3 创建Github仓库 需要创建两个仓库一个公开仓库名字是username.github.io，名字必须是这个格式。另外创建一个私有仓库，是为了方便管理源代码。 ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:1:3","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"2 创建 site 参考：Quick start | Hugo (gohugo.io) 创建一个site hugo new site WebSite cd WebSite 初始化git仓库 git init git add . git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/CATSLAB-SDU/WebSite.git git push -u origin main 模板设置，可以更换自己喜欢的模板Complete List | Hugo Themes (gohugo.io) git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt 修改hugo.toml文件，建议使用vscode baseURL = \"https://CATSLAB-SDU.github.io/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" uglyURLs=true # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 默认每页列表显示的文章数目 paginate = 12 # 谷歌分析代号 [UA-XXXXXXXX-X] # 版权描述，仅仅用于 SEO copyright = \"\" # 是否使用 robots.txt enableRobotsTXT = true # 是否使用 git 信息 enableGitInfo = true # 是否使用 emoji 代码 enableEmoji = true # 忽略一些构建错误 ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # 作者配置 [author] name = \"CATS LAB\" email = \"catslabsdu@gmail.com\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"笔记\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"笔记\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"标签\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"分类\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [params] # 网站默认主题样式 [\"auto\", \"light\", \"dark\"] defaultTheme = \"light\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"sha256\" # 日期格式 dateFormat = \"2006-01-02\" # 网站标题, 用于 Open Graph 和 Twitter Cards title = \"CATS LAB\" # 网站描述, 用于 RSS, SEO, Open Graph 和 Twitter Cards description= \"实验室学习资料共享博客\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [] # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # 移动端导航栏模式 [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"/favicon.ico\" # 标题名称 name = \"CATS LAB\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2024 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"CATS LAB\" # 是否隐藏网站图标资源链接 noFavicon = true # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"favicon-32x32.png\" # Android 浏览器主题色 themeColor = \"#ffffff\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"algolia\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"CATSLAB\" appID = \"9DJIN648JY\" searchKey = \"e0475938b166cc32e8e52c7b0c3e6071\" # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/avatar.png\" # 主页显示的网站标题 (支持 HTML 格式) title = \"CATS LAB\" # 主页显示的网站副标题 (允许 HTML 格式) subtitle = \"\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"内容为体系结构与隐私计算实验室学习资料分享，仅供参考，侵权请联系删除。\" # 主页文章列","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:2:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"3 部署到Github 进入pubilc创建仓库,并推送到公开仓库 cd public git init git add . git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/CATSLAB-SDU/CATSLAB-SDU.github.io.git git push -u origin main 在github中进行配置 ​​ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:3:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"4 自动部署 在站点根目录执行 Hugo​ 命令生成最终页面，注意替换仓库和主题。 hugo --theme=LoveIt --baseURL=\"https://CATSLAB-SDU.github.io/\" 在本地创建文件hugo.yaml mkdir .github/workflows/ new-item .github/workflows/main.yaml -type file 把下面内容复制到main.yaml中 # Sample workflow for building and deploying a Hugo site to GitHub Pages # This is a basic workflow to help you get started with Actions name: CI # Controls when the action will run. on: # Triggers the workflow on push or pull request events but only for the master branch push: branches: [main] pull_request: branches: [main] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # A workflow run is made up of one or more jobs that can run sequentially or in parallel jobs: # This workflow contains a single job called \"build\" build: # The type of runner that the job will run on runs-on: ubuntu-latest # Steps represent a sequence of tasks that will be executed as part of the job steps: # Checks-out your repository under $GITHUB\\_WORKSPACE, so your job can access it - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Hugo setup # You may pin to the exact commit or the version. # uses: peaceiris/actions-hugo@2e89aa66d0093e4cd14751b3028fc1a179452c2e uses: peaceiris/actions-hugo@v2.4.13 with: # The Hugo version to download (if necessary) and use. Example: 0.58.2 hugo-version: latest # optional, default is latest # Download (if necessary) and use Hugo extended version. Example: true extended: true # optional, default is false - name: Build run: hugo - name: Pushes to another repository uses: cpina/github-action-push-to-another-repository@main env: API\\_TOKEN\\_GITHUB: ${{ secrets.API_TOKEN_GITHUB }} with: source-directory: \"public\" destination-github-username: \"CATSLAB-SDU\" destination-repository-name: \"CATSLAB-SDU.github.io\" user-email: catslabsdu@gmail.com 在github中设置Developer settings/Personal access tokens​，新建一个密钥，权限设置把Repo​打勾。 ​​ 回到私人仓库的设置里，新建密钥，将刚才生成的个人密钥填进去，名字设为API_TOKEN_GITHUB​(跟 CI 脚本里的名称对应即可) ​​ 完成该设置后更新私有库后公共库会自动更新。 ‍ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:4:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"4 细节设置 Favicon Generator for perfect icons on all browsers (realfavicongenerator.net)利用该网站生成头像等资源发在static目录下面。 ‍ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:5:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"5 评论设置 首先要去Github -\u003e Settings -\u003e Developer Settings -\u003e OAuth App​ 里注册一个新的 OAuth App 来给 Gitalk 使用。并修改config.toml​: [params.page.comment] enable = true \u003c-- 启用评论系统 [params.page.comment.gitalk] enable = true owner = \"JellyZhang\" \u003c-- Github用户名 repo = \"blog-comment\" \u003c-- 用来存放评论的repo名称 clientId = \"\" \u003c-- 申请好的OAuth的ClientId clientSecret = \"\" \u003c-- 申请好的OAuth的ClientSecret ​​ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:6:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"6 搜索设置 在AI search that understands | Algolia创建账号,创建一个application​与index​: ​​ 然后将下面的内容填写到config.toml​中： # 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"algolia\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"blog\" appID = \"9DJIN648JY\" searchKey = \"e0475938b166cc32e8e52c7b0c3e6071\" ​​ ‍ 修改main.yaml，将下面内容加到最后面： - name: Algolia Index Uploader # You may pin to the exact commit or the version. # uses: rxrw/algolia-index-uploader@294d1d600c4a2197a64903b6161cc80acea1becb uses: rxrw/algolia-index-uploader@v1 with: # Your Algolia IndexPath index_path: public/index.json # Algolia Index Id algolia_index_id: 9DJIN648JY # Algolia Index Name algolia_index_name: CATSLAB # Algolia Admin Key algolia_index_admin_key: d4f23d91632cfbe0eeb5b9a6debbe280 ‍ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:7:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"7 日常维护 登录github账号： user：catslabsdu@gmail.com password：catlab200. 在website仓库加入添加自己的github为协作账号，并在自己github账号绑定的邮件中同意。 ​​ clone website仓库，将相应的markdown文件放到content/posts目录下，在文件前面加入，修改markdown.py中的文件名，执行python脚本进行字符转义。 +++ title = \"title\" date = \"2024-03-06T16:02:29+08:00\" draft = fasle subtitle = \"\" tags = [\"笔记1\",\"笔记1\"] categories = [\"方向\"] license = '\u003ca rel=\"license external nofollow noopener noreferrer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' +++ python转义主要是为了兼容数学公式,下面是一个示​例$idf*$​： $$\r\\begin{align*}\r\\omega_{R\\cdot C}^{(k_{r}+k_{c}\\cdot R)(i_{r}\\cdot C+i_{c})}\u0026=\\omega_{R\\cdot C}^{i_{c}k_{r}+i_{c}k_{c}\\cdot R+i_{r}k_{r}\\cdot C+i_{r}k_{c}\\cdot RC} \\\\\u0026=\\omega_{R\\cdot C}^{i_{c}k_{r}}\\cdot \\omega_{R\\cdot C}^{i_{c}k_{c}\\cdot R}\\cdot \\omega_{R\\cdot C}^{i_{r}k_{r}\\cdot C}\\cdot \\omega_{R\\cdot C}^{i_{r}k_{c}\\cdot RC}\r\\end{align*}\r$$\r返回website根目录执行： hugo git add . git commit -m \"添加文件\" git push -u origin main ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:8:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"},{"categories":null,"content":"8 图片处理 markdown中的图片需要上传到网络图床。下载PicGo这里推荐山东大学的镜像网站：v2.3.1 (sdu.edu.cn) 进行图床设置： 仓库名: CATSLAB-SDU/ImageBed 分支：main token：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 存储路径： 自定义域名：https://cdn.jsdelivr.net/gh/CATSLAB-SDU/ImageBed@main ​​ ","date":"0001-01-01","objectID":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html:9:0","tags":null,"title":"","uri":"/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5.html"}]